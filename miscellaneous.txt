<!-- DCC code -->

# from django_plotly_dash import DjangoDash
# from dash import Input, Output, dcc, html
# import dash_mantine_components as dmc
# import plotly.express as px
# from .models import StudentData

# # Define the Dash app
# app = DjangoDash("AdmissionsApp")

# # Layout with multiple charts
# app.layout = dmc.MantineProvider([
#     dmc.Center(
#         # dmc.Title("Admissions Data Dashboard", align="center", order=1)
#         # dmc.Title("Admissions Data Dashboard", ta="center", order=1),
#         dmc.Title("Admissions Data Dashboard", style={"textAlign": "center"}, order=1),

#     ),
#     dmc.Space(h=20),

#     # Dropdown foselecting the year
#     dmc.Select(
#         label="Select Year",
#         id="year-select",
#         placeholder="Choose a year",
#         data=[
#             {"label": student.year, "value": student.year}
#             for student in StudentData.objects.all()
#         ],
#         clearable=True
#     ),
#     dmc.Space(h=20),

#     # Graph containers
#     # dmc.Grid([
#     #     dmc.Col(dcc.Graph(id="bar-chart"), span=4),
#     #     dmc.Col(dcc.Graph(id="line-graph"), span=4),
#     #     dmc.Col(dcc.Graphr (id="pie-chart"), span=4),
#     # ])

#     # dmc.Grid([ne-gr
#     #     dmc.Grid.Col(dcc.Graph(id="bar-chart"), span=4),
#     #     dmc.Grid.Col(dcc.Graph(id="line-graph"), span=4),
#     #     dmc.Grid.Col(dcc.Graph(id="pie-chart"), span=4),
#     # ])

#     dmc.SimpleGrid(
#         cols=3,
#         spacing="lg",
#         children=[
#             dcc.Graph(id="bar-chart"),
#             dcc.Graph(id="liaph"),
#             dcc.Graph(id="pie-chart"),
#         ]
#     )
# ])

# # Callback to update all graphs
# @app.callback(
#     [Output("bar-chart", "figure"),
#      Output("line-graph", "figure"),
#      Output("pie-chart", "figure")],
#     [Input("year-select", "value")]
# )
# def update_graphs(selected_year):
#     if selected_year:
#         student = StudentData.objects.filter(year=selected_year).first()
#         if student:
#             # Data for graphs
#             branches = ["Mech", "Civil", "EE", "CSE"]
#             values = [int(student.mech), int(student.civil), int(student.ee), int(student.cse)]

#             # Bar Chart
#             bar_chart = px.bar(
#                 x=branches,
#                 y=values,
#                 labels={"x": "Branch", "y": "Number of Students"},
#                 title=f"Bar Chart - Admissions for {selected_year}"
#             )

#             # Line Graph
#             line_graph = px.line(
#                 x=branches,
#                 y=values,
#                 labels={"x": "Branch", "y": "Number of Students"},
#                 title=f"Line Graph - Admissions for {selected_year}"
#             )

#             # Pie Chart
#             pie_chart = px.pie(
#                 values=values,
#                 names=branches,
#                 title=f"Pie Chart - Admissions Distribution for {selected_year}",
#                 labels={"values": "Number of Students"}
#             )

#             return bar_chart, line_graph, pie_chart

#     # Return empty charts if no year is selected
#     empty_chart = px.bar(title="Select a year to view data")
#     return empty_chart, empty_chart, empty_chart